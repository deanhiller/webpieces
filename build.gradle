plugins {
    id 'java-library'
    id 'checkstyle'
    id 'jacoco' //code coverage
    id 'eclipse'
    id 'idea'
    id 'signing'
    id 'maven-publish'
}

apply from: 'config/global.gradle'

if(project.hasProperty('projVersion')) {
    task release {
        dependsOn build
        dependsOn('publishMavenJavaPublicationToSonatypeRepository')
        dependsOn gradle.includedBuild('gradle-plugin-htmlcompiler').task(':publishPlugins')
        dependsOn gradle.includedBuild('webserver-templates').task(':githubRelease')
    }
} else {
    task release {
        dependsOn build
        dependsOn('publishMavenJavaPublicationToWebpiecesLocal2Repository')
        dependsOn('publishMavenJavaPublicationToMavenLocal')
    }
}
//if(project.hasProperty('projVersion')) {
//    //task release(dependsOn: ':webserver:githubRelease')
//    tasks.register('release') {
//        dependsOn gradle.includedBuild('webserverDirectory').task(':githubRelease')
//    }
//} else {

//gradle.includedBuilds.each( { build ->
//    System.out.println("build22="+build.name)
////    tasks.create(taskName) { task ->
////        dependsOn gradle.includedBuild(build.name).task(":$taskName")
////    }
//})


dependencies {
    api libs.webpieces.server.webserver
    api libs.webpieces.server.templates
    api libs.webpieces.http.client

    api libs.webpieces.plugin.backend
    api libs.webpieces.plugin.documentation
    api libs.webpieces.plugin.dto
    //failed build right now
    //api libs.webpieces.plugin.grpc
    api libs.webpieces.plugin.h2db
    api libs.webpieces.plugin.hibernate
    api libs.webpieces.plugin.sslcert
    api libs.webpieces.plugin.jackson
    api libs.webpieces.plugin.properties

    api libs.webpieces.microservice.clientgenerator
    api libs.webpieces.microservice.scaffold

    api libs.webpieces.library.elasticsearch

    api libs.webpieces.projectcreator

    api libs.webpieces.googlecloud.storage
}

publishing {
    publications {
        //mavenJava(MavenPublication) {
        //    pom {
        //        description = 'Templating library using groovy as the scripting language'
        //    }
        //}
    }
}

publish.onlyIf { false }
if(project.hasProperty('projVersion')) {
    publishMavenJavaPublicationToSonatypeRepository.onlyIf {false}
}
