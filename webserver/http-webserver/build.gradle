plugins {
    id 'java-library'
    id 'checkstyle'
    id 'jacoco' //code coverage
    id 'eclipse'
    id 'idea'
    id 'signing'
    id 'maven-publish'
}

group = 'org.webpieces.server'

apply from: '../../config/global.gradle'

sourceSets {
    test {
        resources {
            //This ADDS src/test/java/**/*.html and we still read in src/test/resources/**
            srcDirs = ["src/test/java", "src/test/resources"]
            excludes = ["**/*.java"]
        }
    }
}

//Intellij Idea has a weird quirk we need to avoid
if (System.getProperty('idea.active')) {

    // to have classes and resources in the same output directory
    idea {
        module {
            testOutputDir file("out/production/classes")
        }
    }
}

//ok, this is the deal here.  JPA/hibernate made the decision to look for a persistence.xml file
//and scan for classes with @Entity in the directory OR jar with that xml file only
//maven(and I hate this) a long time ago separated src/main/java and src/main/resources but
//this screws tools in many situations like this one so this puts it back so the output is at
//least put to the same location
//sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir

task copyPersistenceXml(type: Copy, dependsOn: 'compileTestJava') {
    from 'src/test/resources/META-INF'
    into 'build/classes/java/test/META-INF'
    include 'persistence.xml'
    //outputs.upToDateWhen { false }
}

test.dependsOn ("copyPersistenceXml")

dependencies {

    api libs.google.guice
    implementation libs.acme4j.client
    api libs.webpieces.http.frontend2
    api libs.webpieces.template
    api libs.webpieces.http.router

    testImplementation libs.webpieces.core.mock
    testImplementation libs.webpieces.core.ddl
    testImplementation libs.webpieces.core.runtimecompile
    testImplementation libs.webpieces.server.webserver.test
    testImplementation libs.webpieces.http.router.dev
    testImplementation libs.webpieces.plugin.hibernate
    testImplementation libs.webpieces.plugin.jackson

    testImplementation libs.h2

    testImplementation libs.apache.commons.io
    testImplementation libs.jakarta.validation.api
    testImplementation libs.selenium
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                description = 'The full webpieces server AS A library'
            }
        }
    }
}


test {
    if (!project.hasProperty('includeSelenium')) {
        exclude '**/*Selenium*'
    }
}
